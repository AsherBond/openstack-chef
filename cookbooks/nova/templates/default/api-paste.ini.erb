#######
# EC2 #
#######

[composite:ec2]
use = egg:Paste#urlmap
/: ec2versions
/services/Cloud: ec2cloud
/services/Admin: ec2admin
/latest: ec2metadata
/2007-01-19: ec2metadata
/2007-03-01: ec2metadata
/2007-08-29: ec2metadata
/2007-10-10: ec2metadata
/2007-12-15: ec2metadata
/2008-02-01: ec2metadata
/2008-09-01: ec2metadata
/2009-04-04: ec2metadata
/1.0: ec2metadata

[pipeline:ec2cloud]
<% if node[:nova][:auth_type] == "noauth" %>
pipeline = logrequest ec2noauth cloudrequest authorizer ec2executor
<% elsif node[:nova][:auth_type] == "deprecated" %>
pipeline = logrequest authenticate cloudrequest authorizer ec2executor
<% elsif node[:nova][:auth_type] == "keystone" %>
pipeline = logrequest totoken authtoken keystonecontext cloudrequest authorizer ec2executor
<% end %>

[pipeline:ec2admin]
<% if node[:nova][:auth_type] == "noauth" %>
pipeline = logrequest ec2noauth adminrequest authorizer ec2executor
<% elsif node[:nova][:auth_type] == "deprecated" %>
pipeline = logrequest authenticate adminrequest authorizer ec2executor
<% elsif node[:nova][:auth_type] == "keystone" %>
pipeline = logrequest totoken authtoken keystonecontext adminrequest authorizer ec2executor
<% end %>

[pipeline:ec2metadata]
pipeline = logrequest ec2md

[pipeline:ec2versions]
pipeline = logrequest ec2ver

[filter:logrequest]
paste.filter_factory = nova.api.ec2:RequestLogging.factory

[filter:ec2lockout]
paste.filter_factory = nova.api.ec2:Lockout.factory

[filter:totoken]
paste.filter_factory = keystone.middleware.ec2_token:EC2Token.factory

[filter:ec2noauth]
paste.filter_factory = nova.api.ec2:NoAuth.factory

[filter:authenticate]
paste.filter_factory = nova.api.ec2:Authenticate.factory

[filter:cloudrequest]
controller = nova.api.ec2.cloud.CloudController
paste.filter_factory = nova.api.ec2:Requestify.factory

[filter:adminrequest]
controller = nova.api.ec2.admin.AdminController
paste.filter_factory = nova.api.ec2:Requestify.factory

[filter:authorizer]
paste.filter_factory = nova.api.ec2:Authorizer.factory

[app:ec2executor]
paste.app_factory = nova.api.ec2:Executor.factory

[app:ec2ver]
paste.app_factory = nova.api.ec2:Versions.factory

[app:ec2md]
paste.app_factory = nova.api.ec2.metadatarequesthandler:MetadataRequestHandler.factory

#############
# Openstack #
#############

[composite:osapi]
use = egg:Paste#urlmap
/: osversions
/v1.1: openstack_api_v2
/v2: openstack_api_v2

[pipeline:openstack_api_v2]
<% if node[:nova][:auth_type] == "noauth" %>
pipeline = faultwrap noauth ratelimit serialize extensions osapi_app_v2
<% elsif node[:nova][:auth_type] == "deprecated" %>
pipeline = faultwrap auth ratelimit serialize extensions osapi_app_v2
<% elsif node[:nova][:auth_type] == "keystone" %>
pipeline = faultwrap authtoken keystonecontext ratelimit serialize extensions osapi_app_v2
<% end %>

[filter:faultwrap]
paste.filter_factory = nova.api.openstack.v2:FaultWrapper.factory

[filter:auth]
paste.filter_factory = nova.api.openstack.v2.auth:AuthMiddleware.factory

[filter:noauth]
paste.filter_factory = nova.api.openstack.v2.auth:NoAuthMiddleware.factory

[filter:ratelimit]
paste.filter_factory = nova.api.openstack.v2.limits:RateLimitingMiddleware.factory

[filter:serialize]
paste.filter_factory = nova.api.openstack.wsgi:LazySerializationMiddleware.factory

[filter:extensions]
paste.filter_factory = nova.api.openstack.v2.extensions:ExtensionMiddleware.factory

[app:osapi_app_v2]
paste.app_factory = nova.api.openstack.v2:APIRouter.factory

[pipeline:osversions]
pipeline = faultwrap osversionapp

[app:osversionapp]
paste.app_factory = nova.api.openstack.v2.versions:Versions.factory

##########
# Shared #
##########

[filter:keystonecontext]
paste.filter_factory = keystone.middleware.nova_keystone_context:NovaKeystoneContext.factory

[filter:authtoken]
paste.filter_factory = keystone.middleware.auth_token:filter_factory
service_protocol = <%= node[:nova][:keystone_service_protocol] %>
service_host = <%= node[:nova][:keystone_service_host] %>
service_port = <%= node[:nova][:keystone_service_port] %>
auth_host = <%= node[:nova][:keystone_auth_host] %>
auth_port = <%= node[:nova][:keystone_auth_port] %>
auth_protocol = <%= node[:nova][:keystone_auth_protocol] %>
auth_uri = <%= node[:nova][:keystone_auth_uri] %>
admin_token = <%= node[:nova][:keystone_admin_token] %>
